{
  "hash": "c847bc22f910819ff7ce809453f3e121",
  "result": {
    "markdown": "---\ntitle: \"Warning systems\"\neditor: visual\neditor_options: \n  chunk_output_type: inline\nfilters:\n  - shinylive\n---\n\n\n## Introduction\n\nOne practical application of plant disease epidemiology is to predict disease occurrences to guide timely management interventions, reducing crop damage and pesticide use. Since the early 1900s, warning systems (synonyms: disease forecaster, predictor, or decision support systems[^warning-systems-1]) have advanced considerably, particularly for major threats like potato late blight and apple scab for which several systems were developed and improved over the decades. Technological progress in recent decades has boosted the development and automation of these systems, now widely available in public and private sectors, providing direct, sophisticated guidance to crop advisors and growers.\n\n[^warning-systems-1]: More comprehensively, Decision Support Systems (DSS), integrate expert input, simulations, and databases for more nuanced management recommendations, transcending simple prediction to encompass various goals within computerized frameworks.\n\nIn its core, warning systems are based on a **model**, defined here as a simplified, often mathematical, representation of a process used for making predictions or suggesting management actions. They range from basic rules (e.g. if-then) and static thresholds to sophisticated simulation models covering entire disease epidemics.\n\nThe purpose behind modeling diseases and creating warning systems is to **understand and predict** plant disease epidemics, though these efforts don't always lead to direct practical applications. Extensive research goes into determining disease drivers and modeling epidemic aspects, primarily for **academic insight** or specific investigative goals rather than creating user-end tools. While complex models, including simulation types, serve to consolidate current knowledge or assess disease risk under specific scenarios (e.g. historical or future climate, various management, etc), they infrequently aim to develop directly applicable warning systems for disease management. But when are warning systems needed? The box and the figure below provide some information on their utility. In the box, risk analysis is defined as an approach for pathogens/diseases that are not present in a target region and for which modeling can be used for risk estimation if the disease is highly damaging were it occurs. On the other hand, warning systems can be used if the disease is more erratic but damaging.\n\n\n```{mermaid}\n%%| label: fig-diagram2\n%%| fig-cap: \"Decision chart for the need of risk analysis or warning systems in disease management\"\n\nflowchart\n    Start((Start))\n    A{Disease<BR>present?}\n    B{Highly<BR>damaging?}\n    C[Risk Analysis]\n    D{Damaging?}\n    E{Frequent<BR>epidemics?}\n    F[Scheduled treatments]\n    G[Warning System]\n\n    Start --> A\n    A -->|N| B\n    B -->|N| Start\n    D -->|N| G\n    A -->|Y| D\n    D -->|Y| E\n    E -->|Y| F\n    B -->|Y| C\n    E -->|N| G\n\n```\n\n\n::: callout-warning\n## Box- When is a warning system needed?\n\nFor operational and economical use, warning systems must fulfill four criteria to be practical. A more comprehensive discussion on this topic is presented in [@Campbell1990]:\n\n1.  They should target diseases that are prevalent and economically damaging, affecting yield or quality. Merely having severe economic consequences doesn't guarantee a system's practical use or attention from growers and advisors.\n\n2.  The diseases should exhibit variability across seasons in terms of onset, epidemic growth rate, severity, or another aspect, creating uncertainty in decision-making. Diseases with predictable patterns provide minimal information and little management advantage, reducing the relevance of warning systems.\n\n3.  Users should be capable of acting on the system's alerts, necessitating available and effective control measures and sufficient response time to prevent crop damage. Systems are unhelpful if practitioners can't adapt their strategies promptly.\n\n4.  The system must encompass comprehensive knowledge about the disease, synthesizing accurate risk estimates. Understanding the specific interactions between host, pathogen, and environment is crucial for the system's effectiveness and relevance.\n:::\n\n## What types of systems are there?\n\nThese systems vary significantly in structure and design, reflecting the multitude of plant diseases, objectives, available data, control strategies, developer preferences, and operational infrastructures. Usually, warning system as based on weather inputs, but they might leverage other inputs like host, pathogen, and economic factors, catering to the complexities of disease prediction.\n\nDisease warning systems can include simple rules of thumb (e.g. if-then), static or dynamic disease thresholds, direct detection of inoculum, empirically-derived risk models, or complex simulation models that estimate all phases of an epidemic. The underlying models in these systems can be grouped into two different basic types: 1) Empirical, based on statistical correlations with disease data; 2) Mechanistic (process-based), constructed around understood cause-effect relationships within disease progression. Let's see some examples of these systems together with their implementation in R.\n\n### Disease thresholds\n\nDamaging thresholds, integral to integrated pest management in entomology, serve as basic disease warning systems. They involve economic injury levels, denoting pest abundance that equates control costs with incurred losses, and economic thresholds, indicating when action is necessary to avoid reaching injury levels. These concepts, while straightforward, can be complex in practical scenarios.\n\nThough less prevalent than in arthropod management, thresholds guide actions like fungicide application in plant diseases, especially those directly impacting yield through photosynthetic area reduction. However, their application is challenging for rapid, recurrent diseases affecting high-value crops, requiring prompt intervention even at minimal disease presence. With potato late blight, for instance, the first fungicide application may need to be applied by the time disease severity reaches as low as 0.1% of the foliage. Hence, disease monitoring is the base of this system.\n\nThe concept of **economic damage threshold** (EDT) may be used as a criteria do warn fungicide spray. By definition, EDT is the amount of disease intensity (e.g. severity when dealing with foliar diseases) that corresponds to an economic loss that equates the control cost to combat the disease. A formula for the EDT was proposed by Mumford and Norton [@mumford1984] further modified by Reis [@reis2002modelo] for use in foliar fungal diseases, as described in Equation 3:\n\n$EDT = \\frac{F_C}{S_P . D_C} . C_e$ ,\n\nwhere EDT is the disease intensity, $F_C$ is the fungicide cost (USD/ha), $S_P$ is the soybean price (USD/ton), $D_C$ is the damage coefficient (calculated based on the potential yield) and $C_e$ is the control efficacy of the fungicide (proportion of disease reduction relative to non-treated). In practice, sprays should be applied prior to reaching the EDT, which gives rise to the AT (action threshold).\n\nIn a study on northern corn leaf blight in Argentina, the following values were used to calculate the EDT [@derossi2022]. Note that the authors adjusted the Dc to potential yield by multiplying by the potential yield value (8.5 ton.ha) in metric tons, since the Dc was normalized to metric tons. More about Dc in the dedicated chapter on [yield loss](yieldloss-regression-models.html#damage-coefficients). The action threshold (AT) was defined in that study as 20% reduction of the EDT.\n\n\n::: {.cell hash='warning-systems_cache/html/unnamed-chunk-2_801088ce966329a0040de66dd2821fe6'}\n\n```{.r .cell-code}\ncalculate_EDT <- function(Fc, Cp, Dc, Ec) {\n  EDT <- (Fc / (Cp * Dc)) * Ce\n  return(EDT)\n}\nFc <- 30      # fixed cost of control is 30 USD/ha.\nCp <- 112     # fixed crop price is 112 USD/ton.\nDc <- 0.1712  # for potential yield of 8.5 t/ha so 8.5 x 0.02015 = 0.1712.\nCe <- 0.70    # control efficacy of fungicide is 70%.\nEDT_value <- calculate_EDT(Fc, Cp, Dc, Ce)\nprint(EDT_value)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1.09521\n```\n:::\n\n```{.r .cell-code}\nADT = EDT_value * 0.80\nADT\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.8761682\n```\n:::\n:::\n\n\n\n\n### Warnings based on weather\n\nDisease warning systems frequently predict conditions conducive to infection of the plant by the pathogen, with wetness and temperature being key variables for many foliar diseases. BLITECAST, the first computerized system, exemplifies this in its monitoring of late blight in potatoes and tomatoes. While initial inoculum is often undetectable, the presence of inoculum of the pathogens is assumed. Accurate predictions of an outbreak are possible by tracking environmental conditions favorable for disease development.\n\nWeather-driven disease warning systems, like FAST and Wallin, continuously monitor moisture and temperature for various crop diseases. These systems calculate weather favorability or severity values from environmental data, predicting infection and disease severity. These systems guide growers on optimal spraying schedules, initiating treatments or determining application intervals based on accumulated severity values over time.\n\n#### Wallin model\n\nJ.R. Wallin developed a model in the mid-20th century focusing on forecasting potato late blight, detailed across several publications [@wallin1962]. The model tracks hourly relative humidity and temperature, emphasizing periods with relative humidity of 90% or more. It calculates the number of high-humidity hours and corresponding minimum and maximum temperatures. By accumulating 'disease severity values' (DSV) from plant emergence throughout the season, based on humidity and temperature metrics, the model predicts the initial onset and subsequent spread of potato late blight. The table below summarizes the way the DSVs are obtained based on combinations of hours of relative humdity \\> 90% and the air temperature within the wet period.\n\n**Table.** Relationship of temperature and relative humidity (RH) periods as used in the Wallin late blight forecasting system to predict disease severity values (0 to 4).\n\n|                           |       |          |       |       |      |\n|---------------------------|-------|----------|-------|-------|------|\n|                           | Daily | severity | value |       |      |\n| Average Temperature Range | 0     | 1        | 2     | 3     | 4    |\n| 7.2 - 11.6 C              | 15    | 16-18    | 19-21 | 22-24 | \\>25 |\n| 11.7 - 15.0 C             | 12    | 13-15    | 16-18 | 19-21 | \\>22 |\n| 15.1 - 26.6 C             | 9     | 10-12    | 13-15 | 16-18 | \\>19 |\n\nLet's download hourly weather data from NASA Power project using nasapower r package for the locality of Viçosa, MG, Brazil during the month of March 2022.\n\n\n::: {.cell hash='warning-systems_cache/html/unnamed-chunk-3_b916c09cff6d902e37e3759291b1206e'}\n\n```{.r .cell-code}\nlibrary(nasapower)\nweather <- get_power(\n      community = \"ag\",\n      lonlat = c(-42.88, -20.7561),\n      pars = c(\"RH2M\", \"T2M\"),\n      dates = c(\"2022-03-02\", \"2022-03-31\"),\n      temporal_api = \"hourly\"\n    )\nhead(weather)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nNASA/POWER CERES/MERRA2 Native Resolution Hourly Data  \n Dates (month/day/year): 03/02/2022 through 03/31/2022  \n Location: Latitude  -20.7561   Longitude -42.88  \n Elevation from MERRA-2: Average for 0.5 x 0.625 degree lat/lon region = 665.27 meters \n The value for missing source data that cannot be computed or is outside of the sources availability range: NA  \n Parameter(s):  \n \n Parameters: \n RH2M     MERRA-2 Relative Humidity at 2 Meters (%) ;\n T2M      MERRA-2 Temperature at 2 Meters (C)  \n \n# A tibble: 6 × 8\n    LON   LAT  YEAR    MO    DY    HR  RH2M   T2M\n  <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\n1 -42.9 -20.8  2022     3     1    21  93.6  20.6\n2 -42.9 -20.8  2022     3     1    22  94.4  20.2\n3 -42.9 -20.8  2022     3     1    23  95.4  19.7\n4 -42.9 -20.8  2022     3     2     0  96.3  19.4\n5 -42.9 -20.8  2022     3     2     1  97.2  19.0\n6 -42.9 -20.8  2022     3     2     2  98.1  18.8\n```\n:::\n:::\n\n\nIn order to prepare the data to calculate the DSVs, we first need to obtain the leaf wetness duration variable (LW) based on hours of relative humidity \\>90% and then the average temperature during the LW for each day. We group the variables by year, month and day and use `mutate()` and `summarise()`.\n\n\n::: {.cell hash='warning-systems_cache/html/unnamed-chunk-4_57ec2d30b6a8da07c0facac8b55d2ad3'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nweather2 <- weather |> \n      group_by(YEAR, MO, DY) |> \n      mutate(LW = case_when(RH2M > 90 ~ 1,\n                            TRUE ~ 0)) |> \n      filter(LW > 0) |>\n      summarise(Air_LWD = mean(T2M, na.rm = TRUE),\n                LWD = n())\n```\n:::\n\n\nNow we are ready to calculate the daily DSV based on rules on the table and inspect the first 6 rows of the new table called `df_wallin`.\n\n\n::: {.cell hash='warning-systems_cache/html/unnamed-chunk-5_c7eebcf28a639a863e0c7ee8e310c8c0'}\n\n```{.r .cell-code}\ndf_wallin <- weather2 |> \n      mutate(\n        DSV = case_when(\n          # Temperature Range: 7.2 - 11.6 C\n          Air_LWD >= 7.2 & Air_LWD <= 11.7 & LWD <= 15 ~ 0,\n          Air_LWD >= 7.2 & Air_LWD <= 11.7 & LWD > 15 & LWD <= 18 ~ 1,\n          Air_LWD >= 7.2 & Air_LWD <= 11.7 & LWD > 18 & LWD <= 21 ~ 2,\n          Air_LWD >= 7.2 & Air_LWD <= 11.7 & LWD > 21 & LWD <= 24 ~ 3,\n          Air_LWD >= 7.2 & Air_LWD <= 11.7 & LWD > 24 ~ 4,\n          \n          # Temperature Range: 11.7 - 15.0 C\n          Air_LWD > 11.7 & Air_LWD <= 15.1 & LWD <= 12 ~ 0,\n          Air_LWD > 11.7 & Air_LWD <= 15.1 & LWD > 12 & LWD <= 15 ~ 1,\n          Air_LWD > 11.7 & Air_LWD <= 15.1 & LWD > 15 & LWD <= 18 ~ 2,\n          Air_LWD > 11.7 & Air_LWD <= 15.1 & LWD > 18 & LWD <= 21 ~ 3,\n          Air_LWD > 11.7 & Air_LWD <= 15.1 & LWD > 21 ~ 4,\n          \n          # Temperature Range: 15.1 - 26.6 C\n          Air_LWD > 15.1 & Air_LWD <= 26.6 & LWD <= 9 ~ 0,\n          Air_LWD > 15.1 & Air_LWD <= 26.6 & LWD > 9 & LWD <= 12 ~ 1,\n          Air_LWD > 15.1 & Air_LWD <= 26.6 & LWD > 12 & LWD <= 15 ~ 2,\n          Air_LWD > 15.1 & Air_LWD <= 26.6 & LWD > 15 & LWD <= 18 ~ 3,\n          Air_LWD > 15.1 & Air_LWD <= 26.6 & LWD > 18 ~ 4,\n          \n          # Default (For temperatures out of the specified ranges or any other scenarios)\n          TRUE ~ 0  # Assigning a default value of 0\n        )\n      )\n    head(df_wallin)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 6\n# Groups:   YEAR, MO [1]\n   YEAR    MO    DY Air_LWD   LWD   DSV\n  <dbl> <dbl> <dbl>   <dbl> <int> <dbl>\n1  2022     3     1    20.2     3     0\n2  2022     3     2    19.2    10     1\n3  2022     3     3    19.7    12     1\n4  2022     3     4    19.9    10     1\n5  2022     3     5    19.5     7     0\n6  2022     3     6    19.0     9     0\n```\n:::\n:::\n\n\nWe can visualize the daily and cumulative DSV for the monthly period. The dashed line indicates the action threshold of 20 cumulative DSV, or when a spray should be applied. Please not that in the real system, the DSV is reduced to zero and another counting is initiated.\n\n\n::: {.cell hash='warning-systems_cache/html/unnamed-chunk-6_e9ad5565ffb041ae9654c3605e86622b'}\n\n```{.r .cell-code}\ndf_wallin2 <- df_wallin |> \n  mutate(DSV2 = cumsum(DSV),\n  date = as.Date(sprintf('%04d-%02d-%02d', YEAR, MO, DY)))\n\ndf_wallin2 |> \n  ggplot(aes(date, DSV))+\n  geom_col(fill = \"#339966\")+\n  geom_line(aes(date, DSV2))+\n  geom_hline(yintercept = 20, linetype = 2)+\n  annotate(geom = \"text\", x = as.Date(\"2022-03-04\"), y = 20.5, label = \"Action threshold\")+\n  r4pde::theme_r4pde()+\n  labs(x = \"Date\", y = \"Daily and cumulative DSV\")\n```\n\n::: {.cell-output-display}\n![](warning-systems_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}